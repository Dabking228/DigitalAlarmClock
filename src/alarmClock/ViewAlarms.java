package alarmClock;

import runAlarmClock.RunAlarmClock;
import classes.Time24;
import classes.Time12;
import classes.Time;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ViewAlarms extends javax.swing.JFrame {
	Time time = new Time();
	Time12 time12 = new Time12();
	Time24 time24 = new Time24();
	DefaultTableModel model = new DefaultTableModel();
	
	int selectedRow;
	String selectedHour;
	String selectedMinute;
	String selectedAm_pm;
	String selectedAlarmStatus;
	/**
	 * Creates new form ViewAlarms
	 */
	public ViewAlarms() {
		initComponents();
		model = (DefaultTableModel) alarmTable.getModel();
		alarmTable.getTableHeader().setVisible(false);
		selectedRow = alarmTable.getSelectedRow();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        alarmScrollPane = new javax.swing.JScrollPane();
        alarmTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        backBtn = new javax.swing.JButton();
        updateAlarmBtn = new javax.swing.JButton();
        deleteAlarmBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        title.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        title.setText("View Alarms");
        title.setPreferredSize(new java.awt.Dimension(207, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(294, Short.MAX_VALUE)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(294, 294, 294))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(title, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
        );

        alarmScrollPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        alarmScrollPane.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        alarmTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        alarmTable.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        alarmTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        alarmTable.setColumnSelectionAllowed(true);
        alarmTable.setRowHeight(50);
        alarmTable.setRowMargin(10);
        alarmTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        alarmTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        alarmTable.setShowGrid(true);
        alarmTable.getTableHeader().setResizingAllowed(false);
        alarmTable.getTableHeader().setReorderingAllowed(false);
        alarmScrollPane.setViewportView(alarmTable);
        alarmTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (alarmTable.getColumnModel().getColumnCount() > 0) {
            alarmTable.getColumnModel().getColumn(0).setResizable(false);
            alarmTable.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel4.setPreferredSize(new java.awt.Dimension(550, 99));

        backBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        updateAlarmBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        updateAlarmBtn.setText("Update Alarm");
        updateAlarmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAlarmBtnActionPerformed(evt);
            }
        });

        deleteAlarmBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        deleteAlarmBtn.setText("Delete Alarm");
        deleteAlarmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAlarmBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteAlarmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateAlarmBtn)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateAlarmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteAlarmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(alarmScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(alarmScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        dispose();
        RunAlarmClock.AlarmClock.setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed

    private void updateAlarmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAlarmBtnActionPerformed
        // TODO add your handling code here:
		if(time.getIs12HourFormat() == true){
			 ArrayList<String> selectedTime = time12.getAlarms12().get(selectedRow);
			 selectedHour = selectedTime.get(0);
			 selectedMinute = selectedTime.get(1);
			 selectedAm_pm = selectedTime.get(2);
			 selectedAlarmStatus = selectedTime.get(3);
			 //open update frame
		}
		else{
			ArrayList<String> selectedTime = time24.getAlarms24().get(selectedRow);
			selectedHour = selectedTime.get(0);
			selectedMinute = selectedTime.get(1);
			selectedAlarmStatus = selectedTime.get(2);
			//open update frame
		}
		
    }//GEN-LAST:event_updateAlarmBtnActionPerformed

    private void deleteAlarmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAlarmBtnActionPerformed
		// TODO add your handling code here:
		switch (alarmTable.getSelectedRowCount()) {
			case 1:
				int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this alarm?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
				if (option == JOptionPane.YES_OPTION){
					model.removeRow(selectedRow);
					time12.getAlarms12().remove(selectedRow);
					time24.getAlarms24().remove(selectedRow);
					JOptionPane.showMessageDialog(this, "Alarm Deleted!");	
				}	break;
			case 0:
				JOptionPane.showMessageDialog(this, "Please select an alarm to delete!");
				break;
			default:
				JOptionPane.showMessageDialog(this, "Please select only one alarm to delete at a time!");
				break;
		}
    }//GEN-LAST:event_deleteAlarmBtnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
		displayAlarms();
    }//GEN-LAST:event_formWindowOpened

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		}
		catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ViewAlarms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ViewAlarms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ViewAlarms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ViewAlarms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ViewAlarms().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane alarmScrollPane;
    private javax.swing.JTable alarmTable;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deleteAlarmBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel title;
    private javax.swing.JButton updateAlarmBtn;
    // End of variables declaration//GEN-END:variables

	private void displayAlarms(){
		if(time12.getIs12HourFormat() == true){
			if(time12.getAlarms12().isEmpty()){
				JOptionPane.showMessageDialog(this, "No alarms added.");
			}
			else {
				for (ArrayList<String> alarms12 : time12.getAlarms12()) {
					String convertedTime = alarms12.get(0) + ":" + alarms12.get(1) + " " + alarms12.get(2);
					String status = alarms12.get(3);
					Object[] alarmData = {convertedTime, status};
					model.addRow(alarmData);
				}
			}
		}
		else{
			if(time24.getAlarms24().isEmpty()){
				JOptionPane.showMessageDialog(this, "No alarms added.");
			}
			else {
				for (ArrayList<String> alarms24 : time24.getAlarms24()) {
					String convertedTime = alarms24.get(0) + ":" + alarms24.get(1);
					String status = alarms24.get(2);
					Object[] alarmData = {convertedTime, status};
					model.addRow(alarmData);
				}
			}
		}
	}
}
